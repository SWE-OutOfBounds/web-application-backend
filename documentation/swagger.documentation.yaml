openapi: 3.0.3
info:
  title: Backend for Test application
  contact:
    name: OutOfBounds Dev Team  (email)
    email: sweoutofbounds@gmail.com
  version: 1.0.0
externalDocs:
  description: Application | Tested Library | Full documentation (external)
  url: https://github.com/orgs/SWE-OutOfBounds/repositories
tags:
  - name: Users
    description: Gestione degli utenti dell'applicazione
  - name: Session
    description: Gestione della sessione degli utenti
  - name: Clock-Captcha
    description: Genera dei dati per effettuare un captcha

paths:
  /users:
    post:
      tags:
        - Users
      summary: Registrazione utente
      description: Registrazione di un nuovo utente nel database compreso di verifica CAPTCHA
      
      parameters:
        - in: header
          name: x-secret-key
          schema:
            type: string
          required: true
          
      requestBody:
        $ref: '#/components/requestBodies/Registrazione'
      
      responses:
        '201':
          description: Utente creato con successo
        '400':
          description: I dati della richiesta sono stati inviati in un formato non valido
          content:
            application/json:
              schema:
                properties:
                  details: 
                    type: "string"
                    description: |
                        * `USED_TOKEN` - cc_token già utilizzato in prcedenza, richiederne uno nuovo con GET \clock-captcha.
                        * `BAD_CAPTCHA` - cc_input non valido per il cc_token inviato.
                        * `INVALID_<FIELDNAME>_FORMAT` - Formato di FIELDNAME non valido.
                        * `USED_EMAIL` - Email già presente nel database degli utenti.
        '403':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/DatabaseError'
    
  /session:
    get:
      tags:
        - Session
      summary : Recupera i dati di sessione
      description: Recupera tutti i dati utili per la sessione in corso
      
      parameters:
        - in: header
          name: x-secret-key
          schema:
            type: string
          required: true
      
      responses:
        '200':
          description: Token di sessione valido, dati nella risposta
          content:
            application/json:
              schema:
                properties:
                  email:
                    type: "string"
                    description: Email dell'account
                  username:
                    type: "string"
                    description: Username dell'account
        '400':
          description: I dati della richiesta sono stati inviati in un formato non valido
          content:
            application/json:
              schema:
                properties:
                  details: 
                    type: "string"
                    description: |
                        * `INVALID_TOKEN` - Token di sessione presente ma non riconosciuto.
                        * `EXPIRED_TOKEN` - Token di sessione scaduto.
        '404': 
          $ref: '#/components/responses/NotFound'
        '403':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/DatabaseError'
    
    post:
      tags: 
        - Session
      summary: Richiesta di apertura di una sessione
      description: Richiede i dati di un utente e l'apertura di una sessione con controllo CAPTCHA
      
      parameters:
        - in: header
          name: x-secret-key
          schema:
            type: string
          required: true
      
      requestBody:
        $ref: '#/components/requestBodies/Login'
        
      responses:
        '200':
          description: Authenticazione eseguita, token di sessione nella risposta
          content:  
            application/json:
              schema:
                properties:
                  session_token: 
                    type: "string"
                    example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiJhYmNkMTIzIiwiZXhwaXJ5IjoxNjQ2NjM1NjExMzAxfQ.3Thp81rDFrKXr3WrY1MyMnNK8kKoZBX9lg-JwFznR-M
        '400':
          description: I dati della richiesta sono stati inviati in un formato non valido
          content:
            application/json:
              schema:
                properties:
                  details: 
                    type: "string"
                    description: |
                        * `INVALID_EMAIL_FORMAT` - Formato campo email non valido.
                        * `INVALID_PASSWORD_FORMAT` - Formato campo password non valido.
        '401':
          description: Credenziali inviate nella richiesta errate
          content:
            application/json:
              schema:
               properties:
                details:
                  type: string
                  default: BAD_CREDENTIAL
        '403':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/DatabaseError'
 
  /clock-captcha:
    get:
      tags:
        - Clock-Captcha
      summary : Recupera i dati di sessione
      description: Recupera tutti i dati utili per la sessione in corso
      
      parameters:
        - in: header
          name: x-secret-key
          schema:
            type: string
          required: true
      
      responses:
        '200':
          description: Richiesta valida dati nel corpo della risposta
          content:
            application/json:
              schema:
                properties:
                  image: 
                    type: "string"
                    description: | 
                      Immagine che rappresenta i dati contenuti in `token`
                  token:
                    type: "string"
                    description: Token contentente dati per clock-CAPTCHA
        '403':
          $ref: '#/components/responses/Unauthorized'
      
components:
  
  responses:
  
    Unauthorized:
      description: Viene ricevuta una richiesta con api key non riconosciuta o assente
      content:
        application/json:
          schema:
           properties:
            details:
              type: string
              description: |
                    * `INVALID_API_KEY` - Api key in header non riconosciuta.
                    * `API_KEY_REQUIRED` - Api key mancante nell'header della richiesta.
    DatabaseError:
      description: Viene riscontrato un problema durante la connessione col database
      content:
        application/json:
          schema:
            properties:
              details:
                type: string
                description:  |
                    * `DATABASE_ERROR` - Errore nella comunicazione col database.
                default: DATABASE_ERROR
    NotFound:
      description: I dati della richista sono parzialmente o totalmente mancanti
      content: 
        application/json:
          schema:
            properties:
              details:
                type: string
                description: |
                  * `MISSING_DATA` - Dati di clock-captcha mancanti.
                  * `MISSING_COOKIE` - Cookie con token di sessione mancante.
  
  requestBodies:
    Registrazione:
      description: Tutti i dati necessari alla registrazione
      required: true
      content: 
        application/json:
          schema:
            properties:
              cc_token:
                type: string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiJhYmNkMTIzIiwiZXhwaXJ5IjoxNjQ2NjM1NjExMzAxfQ.3Thp81rDFrKXr3WrY1MyMnNK8kKoZBX9lg-JwFznR-M
                format: JsonWebToken
              cc_input:
                type: string
                example: 11:10
              firstName:
                type: string
                example: Mario
              lastName:
                type: string
                example: Rossi
              email: 
                type: string
                example: "mario.rossi@gmmail.com"
                format: Email
              username:
                type: string
                example: BigMario
              password:
                type: string
                example: Password1234
  
    Login:
      description: Dati necessari all'autenticazione di un utente
      required: true
      content:
        application/json:
          schema:
            properties:
              cc_token:
                type: string
                example: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VySWQiOiJhYmNkMTIzIiwiZXhwaXJ5IjoxNjQ2NjM1NjExMzAxfQ.3Thp81rDFrKXr3WrY1MyMnNK8kKoZBX9lg-JwFznR-M
                format: JsonWebToken
              cc_input:
                type: string
                example: 11:10
              email: 
                type: string
                example: "mario.rossi@gmmail.com"
                format: Email
              password:
                type: string
                example: Password1234
                
                